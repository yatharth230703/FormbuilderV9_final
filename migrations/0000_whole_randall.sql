-- Current sql file was generated after introspecting the database
-- If you want to run this migration please uncomment this code before executing migrations
/*
CREATE TABLE "session" (
	"sid" varchar PRIMARY KEY NOT NULL,
	"sess" json NOT NULL,
	"expire" timestamp(6) NOT NULL
);
--> statement-breakpoint
CREATE TABLE "smoothies" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "smoothies_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"title" text,
	"method" text,
	"rating" bigint
);
--> statement-breakpoint
CREATE TABLE "form_config" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "form_config_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"label" text,
	"language" text,
	"config" json,
	"domain" text,
	"user_uuid" uuid,
	"prompt_history" jsonb
);
--> statement-breakpoint
ALTER TABLE "form_config" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "form_responses" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "form_responses_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"label" text,
	"language" text,
	"response" json,
	"domain" text,
	"form_config_id" bigint,
	"user_uuid" uuid
);
--> statement-breakpoint
ALTER TABLE "form_responses" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE TABLE "users" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "users_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"username" text DEFAULT '' NOT NULL,
	"email" text DEFAULT '' NOT NULL,
	"password" text DEFAULT '',
	"is_admin" boolean DEFAULT false,
	"uuid" uuid,
	"api_key" text,
	"credits" bigint,
	CONSTRAINT "users_username_key" UNIQUE("username"),
	CONSTRAINT "users_email_key" UNIQUE("email"),
	CONSTRAINT "users_uuid_key" UNIQUE("uuid")
);
--> statement-breakpoint
ALTER TABLE "users" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
ALTER TABLE "form_config" ADD CONSTRAINT "form_config_user_uuid_fkey" FOREIGN KEY ("user_uuid") REFERENCES "public"."users"("uuid") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "form_responses" ADD CONSTRAINT "form_config_id_fkey" FOREIGN KEY ("form_config_id") REFERENCES "public"."form_config"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "form_responses" ADD CONSTRAINT "form_responses_form_config_id_fkey" FOREIGN KEY ("form_config_id") REFERENCES "public"."form_config"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "IDX_session_expire" ON "session" USING btree ("expire" timestamp_ops);--> statement-breakpoint
CREATE POLICY "form_config_update_own" ON "form_config" AS PERMISSIVE FOR UPDATE TO public USING ((auth.uid() = user_uuid));--> statement-breakpoint
CREATE POLICY "form_config_select_own" ON "form_config" AS PERMISSIVE FOR SELECT TO public;--> statement-breakpoint
CREATE POLICY "form_config_insert_own" ON "form_config" AS PERMISSIVE FOR INSERT TO public;--> statement-breakpoint
CREATE POLICY "form_config_delete_own" ON "form_config" AS PERMISSIVE FOR DELETE TO public;--> statement-breakpoint
CREATE POLICY "form_responses_select_own" ON "form_responses" AS PERMISSIVE FOR SELECT TO public USING ((form_config_id IN ( SELECT form_config.id
   FROM form_config
  WHERE (form_config.user_uuid = auth.uid()))));--> statement-breakpoint
CREATE POLICY "form_responses_insert_public" ON "form_responses" AS PERMISSIVE FOR INSERT TO public;--> statement-breakpoint
CREATE POLICY "users_update_own" ON "users" AS PERMISSIVE FOR UPDATE TO public USING (((auth.uid())::text = (id)::text));--> statement-breakpoint
CREATE POLICY "users_select_own" ON "users" AS PERMISSIVE FOR SELECT TO public;
*/